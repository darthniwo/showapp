{"version":3,"sources":["directives/directives.js"],"names":["angular","module","directive","restrict","require","link","scope","el","attrs","formCtrl","inputEl","querySelector","inputNgEl","element","inputName","attr","$on","toggleClass","$invalid","bind","onFinishRender","$timeout","$last","$emit","filter","truncate","text","length","end","isNaN","undefined","String","substring","err","ngEnter","event","which","altKey","$apply","$eval","preventDefault"],"mappings":"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","file":"directives.js","sourcesContent":["(function(angular) {\n  angular.module('showapp').directive('showErrors', function() {\n    return {\n      restrict: 'A',\n      require: '^form',\n      link: function(scope, el, attrs, formCtrl) {\n        var inputEl = el[0].querySelector('[name]'); // find the text box element, which has the 'name' attribute\n\n        var inputNgEl = angular.element(inputEl); // convert the native text box element to an angular element\n\n        var inputName = inputNgEl.attr('name'); // get the name on the text box so we know the property to check on the controller\n\n        //get the general event broadcasted from the save action\n        scope.$on('show-errors-check-validity', function() {\n          el.toggleClass('has-error', formCtrl[inputName].$invalid);\n          // console.log('input', inputName)\n        });\n        // only apply the has-error class after the user leaves the text box\n        inputNgEl.bind('blur', function() {\n          el.toggleClass('has-error', formCtrl[inputName].$invalid);\n        });\n      },\n    };\n  });\n})(angular);\n\n(function(angular) {\n  angular\n    .module('showapp')\n    .directive('onFinishRender', ['$timeout', onFinishRender]);\n\n  function onFinishRender($timeout) {\n    return {\n      restrict: 'A',\n      link: function(scope, element, attr) {\n        if (scope.$last === true) {\n          $timeout(function() {\n            scope.$emit('ngRepeatFinished');\n          });\n        }\n      },\n    };\n  }\n})(angular);\n\n(function(angular) {\n  angular.module('showapp').filter('truncate', truncate);\n\n  function truncate() {\n    return function(text, length, end) {\n      try {\n        if (isNaN(length)) length = 10;\n\n        if (end === undefined) end = '...';\n\n        if (text.length <= length || text.length - end.length <= length) {\n          return text;\n        } else {\n          return String(text).substring(0, length - end.length) + end;\n        }\n      } catch (err) {}\n    };\n  }\n})(angular);\n\n(function(angular) {\n  angular.module('showapp').directive('ngEnter', ngEnter);\n\n  function ngEnter() {\n    return function(scope, element, attrs) {\n      element.bind('keydown keypress', function(event) {\n        if (event.which === 13) {\n          if (!event.altKey) {\n            scope.$apply(function() {\n              scope.$eval(attrs.ngEnter);\n              event.preventDefault();\n            });\n          }\n        }\n      });\n    };\n  }\n})(angular);\n"]}