{"version":3,"sources":["services/commonSrv.js"],"names":["angular","module","factory","commonSrv","$http","$cookies","alertify","common","maps","urls","api","movieGenres","tvGenres","series","movies","movieSearch","tvSearch","apiKey","response","toMap","array","mapName","key","forEach","item","getMovieGenres","method","get","then","genres","getTVGenres","endPoint","extras","url","data"],"mappings":"AAAA;;AACA,CAAC,UAASA,OAAT,EAAkB;AACjBA,UACGC,MADH,CACU,SADV,EAEGC,OAFH,CAEW,WAFX,EAEwB,CAAC,OAAD,EAAU,UAAV,EAAsB,UAAtB,EAAkCC,SAAlC,CAFxB;;AAIA,WAASA,SAAT,CAAmBC,KAAnB,EAA0BC,QAA1B,EAAoCC,QAApC,EAA8C;AAC5C,UAAMC,SAAS,EAACC,MAAM,EAAP,EAAf;;AAEAD,WAAOE,IAAP,GAAc;AACZC,WAAK,8BADO;AAEZC,mBAAa,mBAFD;AAGZC,gBAAU,gBAHE;AAIZC,cAAQ,cAJI;AAKZC,cAAQ,iBALI;AAMZC,mBAAa,eAND;AAOZC,gBAAU;AAPE,KAAd;AASAT,WAAOU,MAAP,GAAgB,2CAAhB;AACAV,WAAOW,QAAP,GAAkB,IAAlB;;AAEAX,WAAOY,KAAP,GAAe,CAACC,KAAD,EAAQC,OAAR,EAAiBC,GAAjB,KAAyB;AACtC,UAAI,CAACf,OAAOC,IAAP,CAAYa,OAAZ,CAAL,EAA2B;AACzBd,eAAOC,IAAP,CAAYa,OAAZ,IAAuB,EAAvB;AACD;AACDD,YAAMG,OAAN,CAAcC,QAAQ;AACpBjB,eAAOC,IAAP,CAAYa,OAAZ,EAAqBG,KAAKF,GAAL,CAArB,IAAkCE,IAAlC;AACD,OAFD;AAGAjB,aAAOC,IAAP,CAAYa,OAAZ,EAAqB,KAArB,IAA8BD,KAA9B;AACA;AACD,KATD;;AAWAb,WAAOkB,cAAP,GAAwB,MAAM;AAC5B,aAAOlB,OAAOmB,MAAP,CAAcC,GAAd,CAAkBpB,OAAOE,IAAP,CAAYE,WAA9B,EAA2CiB,IAA3C,CAAgD,MAAM;AAC3D,cAAM,EAACC,MAAD,KAAWtB,OAAOW,QAAxB;AACAX,eAAOY,KAAP,CAAaU,MAAb,EAAqB,aAArB,EAAoC,IAApC;AACD,OAHM,CAAP;AAID,KALD;;AAOAtB,WAAOuB,WAAP,GAAqB,MAAM;AACzB,aAAOvB,OAAOmB,MAAP,CAAcC,GAAd,CAAkBpB,OAAOE,IAAP,CAAYG,QAA9B,EAAwCgB,IAAxC,CAA6C,MAAM;AACxD,cAAM,EAACC,MAAD,KAAWtB,OAAOW,QAAxB;AACAX,eAAOY,KAAP,CAAaU,MAAb,EAAqB,UAArB,EAAiC,IAAjC;AACD,OAHM,CAAP;AAID,KALD;;AAOAtB,WAAOmB,MAAP,GAAgB;AACdC,WAAK,CAACI,QAAD,EAAWC,SAAS,EAApB,KAA2B;AAC9B,eAAO5B,MAAM;AACXsB,kBAAQ,KADG;AAEXO,eAAK1B,OAAOE,IAAP,CAAYC,GAAZ,GAAkBqB,QAAlB,GAA6BxB,OAAOU,MAApC,GAA6Ce;AAFvC,SAAN,EAGJJ,IAHI,CAGCV,YAAY;AAClBX,iBAAOW,QAAP,GAAkBA,SAASgB,IAA3B;AACD,SALM,CAAP;AAMD;AARa,KAAhB;;AAWA,WAAO3B,MAAP;AACD,GAzDgB,CAyDf;AACH,CA1DD,EA0DGP,OA1DH","file":"commonSrv.js","sourcesContent":["'use strict';\n(function(angular) {\n  angular\n    .module('showapp')\n    .factory('commonSrv', ['$http', '$cookies', 'alertify', commonSrv]);\n\n  function commonSrv($http, $cookies, alertify) {\n    const common = {maps: {}};\n\n    common.urls = {\n      api: 'https://api.themoviedb.org/3',\n      movieGenres: '/genre/movie/list',\n      tvGenres: '/genre/tv/list',\n      series: '/discover/tv',\n      movies: '/discover/movie',\n      movieSearch: '/search/movie',\n      tvSearch: '/search/tv',\n    };\n    common.apiKey = '?api_key=09b9ece1e65a600aca53a9b246cedd9e';\n    common.response = null;\n\n    common.toMap = (array, mapName, key) => {\n      if (!common.maps[mapName]) {\n        common.maps[mapName] = {};\n      }\n      array.forEach(item => {\n        common.maps[mapName][item[key]] = item;\n      });\n      common.maps[mapName]['src'] = array;\n      //return common.maps[mapName];\n    };\n\n    common.getMovieGenres = () => {\n      return common.method.get(common.urls.movieGenres).then(() => {\n        const {genres} = common.response;\n        common.toMap(genres, 'movieGenres', 'id');\n      });\n    };\n\n    common.getTVGenres = () => {\n      return common.method.get(common.urls.tvGenres).then(() => {\n        const {genres} = common.response;\n        common.toMap(genres, 'tvGenres', 'id');\n      });\n    };\n\n    common.method = {\n      get: (endPoint, extras = '') => {\n        return $http({\n          method: 'GET',\n          url: common.urls.api + endPoint + common.apiKey + extras,\n        }).then(response => {\n          common.response = response.data;\n        });\n      },\n    };\n\n    return common;\n  } //end of common\n})(angular);\n"]}