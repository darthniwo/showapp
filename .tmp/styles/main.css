/*Body reset*/
html,
body {
  background-color: #fff;
  color: #666;
  font-family: 'Open Sans', sans-serif;
  height: 100%;
  min-width: 100%;
}

html {
  -webkit-tap-highlight-color: transparent;
  -webkit-font-smoothing: antialiased;
  -webkit-appearance: none;
}

body {
  font-size: 14px;
  font-weight: 400;
}

/*Reset fonts for relevant elements*/
input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

input:focus,
textarea:focus {
  outline: none;
}

input,
button,
textarea {
  background-color: transparent;
  border: 0 none;
  -webkit-appearance: none;
  -webkit-border-radius: 0;
}

/*input[type="text"],
input[type="password"],
input[type="email"],
textarea{border:0 none;}*/
/*prevent chrome autocomplete yellow filling background*/
input:-webkit-autofill {
  background-color: transparent !important;
  color: inherit;
}

input:-webkit-autofill {
  -webkit-box-shadow: 0 0 0px 1000px white inset;
}

input:focus,
.form-control:focus {
  box-shadow: none;
  outline: none;
}

.form-control:focus {
  border: solid 1px #ccc;
}

textarea {
  resize: none;
}

/*Links*/
a {
  text-decoration: none;
  cursor: pointer;
}

a:hover,
a:focus {
  text-decoration: none;
}

figure {
  margin: 0;
}

/*Images*/
img {
  vertical-align: middle;
  width: 100%;
}

/*Horizontal rules*/
hr {
  border: 0;
}

b,
strong {
  font-weight: 600;
}

ul {
  list-style: none;
  padding: 0;
}

.checkbox input {
  -webkit-appearance: checkbox;
}

.alertify-logs div {
  font-size: 16px;
}

.app-container {
  height: 100%;
}

.main-wrapper {
  min-height: 100%;
}

.main-wrapper:after {
  content: '';
  display: block;
}

.wrapper {
  padding: 0 12px;
  margin: 0 auto;
  width: 1200px;
}

.alertify .alert .msg,
.alertify .dialog .msg {
  font-size: 14px;
}

/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
}

h1, h2, h3, h5, h4, h6 {
  margin: 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/*// ==========================================================================
// Helper classes
// ========================================================================== */
/*A hack for HTML5 contenteditable attribute on mobile*/
textarea[contenteditable] {
  -webkit-appearance: none;
}

/*// A workaround for S60 3.x and 5.0 devices which do not animated gif images if
// they have been set as display: none*/
.gifhidden {
  position: absolute;
  left: -100%;
}

/* // * Image replacement*/
.ir {
  background-color: transparent;
  background-repeat: no-repeat;
  border: 0;
  direction: ltr;
  display: block;
  overflow: hidden;
  text-align: left;
  text-indent: -999em;
}

.ir br {
  display: none;
}

.bold {
  font-weight: bold;
}

/* // * Hide from both screenreaders and browsers: h5bp.com/u*/
.hidden {
  display: none !important;
  visibility: hidden;
}

.hidden-block {
  display: none;
}

/*// * Hide only visually, but have it available for screenreaders: h5bp.com/v*/
.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

/* // * Extends the .visuallyhidden class to allow the element to be focusable
 // * when navigated to via the keyboard: h5bp.com/p*/
.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}

/* // * Hide visually and from screenreaders, but maintain layout*/
.invisible {
  visibility: hidden;
}

/*//  * Clearfix helper
//  * Used to contain floats: h5bp.com/q*/
.cf:before,
.cf:after {
  content: "";
  display: table;
}

.cf:after {
  clear: both;
}

.display-block {
  display: block;
}

.inline {
  display: inline-block !important;
}

/* // * For IE 6/7 only
 // * Include this rule to trigger hasLayout and contain floats.*/
.cf {
  *zoom: 1;
}

/* // * Clear 
 // * Used also to contain floats*/
.clear {
  clear: left;
}

/* // * FLoat Position helper
 // * Used to floats elements*/
.left {
  float: left !important;
}

.right {
  float: right !important;
}

.center {
  float: none !important;
  margin-left: auto !important;
  margin-right: auto !important;
}

/* // * Text align helper
 // * Used to align text to a determined position*/
.alignleft {
  text-align: left !important;
}

.alignright {
  text-align: right !important;
}

.aligncenter {
  text-align: center !important;
}

/*
* Media helper
* Used to contain article like layout
*  ______    ____body_____
* |      |   title
* | img  |   lorem impus dolor sit amet
* |______|
*
*/
.media-content {
  display: block;
}

.media-content__img {
  float: left;
  margin-right: 10px;
}

.media-content__img.img_show {
  border-radius: 50%;
  height: 100px;
  overflow: hidden;
  width: 100px;
}

.media-content__body {
  overflow: hidden;
  margin-bottom: 0;
}

.media-content__body.body_show span {
  display: block;
  font-size: 12px;
}

.media-preview__img.img_preview {
  text-align: center;
  margin-bottom: 20px;
  height: 200px;
  overflow: hidden;
}

.img_preview img {
  max-width: 100%;
  max-height: 100%;
  width: auto;
}

/**
 * Add/remove margins
 */
.push {
  margin: 20px !important;
}

.push--top {
  margin-top: 20px !important;
}

.push--top-80 {
  margin-top: 80px !important;
}

.push--80 {
  margin-bottom: 80px !important;
}

.push--right {
  margin-right: 20px !important;
}

.push--bottom {
  margin-bottom: 20px !important;
}

.push--left {
  margin-left: 20px !important;
}

.push--ends {
  margin-top: 20px !important;
  margin-bottom: 20px !important;
}

.push--sides {
  margin-right: 20px !important;
  margin-left: 20px !important;
}

.push-half {
  margin: 10px !important;
}

.push-half--top {
  margin-top: 10px !important;
}

.push-half--right {
  margin-right: 10px !important;
}

.push-half--bottom {
  margin-bottom: 10px !important;
}

.push-half--left {
  margin-left: 10px !important;
}

.push-half--ends {
  margin-top: 10px !important;
  margin-bottom: 10px !important;
}

.push-half--sides {
  margin-right: 10px !important;
  margin-left: 10px !important;
}

.flush {
  margin: 0 !important;
}

.flush--top {
  margin-top: 0 !important;
}

.flush--right {
  margin-right: 0 !important;
}

.flush--bottom {
  margin-bottom: 0 !important;
}

.flush--left {
  margin-left: 0 !important;
}

.flush--ends {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

.flush--sides {
  margin-right: 0 !important;
  margin-left: 0 !important;
}

/**
 * Add/remove paddings
 */
.soft {
  padding: 15px !important;
}

.soft--top {
  padding-top: 15px !important;
}

.soft--right {
  padding-right: 15px !important;
}

.soft--bottom {
  padding-bottom: 15px !important;
}

.soft--left {
  padding-left: 15px !important;
}

.soft--ends {
  padding-top: 15px !important;
  padding-bottom: 15px !important;
}

.soft--sides {
  padding-right: 15px !important;
  padding-left: 15px !important;
}

.soft-half {
  padding: 10px !important;
}

.soft-half--top {
  padding-top: 10px !important;
}

.soft-half--right {
  padding-right: 10px !important;
}

.soft-half--bottom {
  padding-bottom: 10px !important;
}

.soft-half--left {
  padding-left: 10px !important;
}

.soft-half--ends {
  padding-top: 10px !important;
  padding-bottom: 10px !important;
}

.soft-half--sides {
  padding-right: 10px !important;
  padding-left: 10px !important;
}

.hard {
  padding: 0 !important;
}

.hard--top {
  padding-top: 0 !important;
}

.hard--right {
  padding-right: 0 !important;
}

.hard--bottom {
  padding-bottom: 0 !important;
}

.hard--left {
  padding-left: 0 !important;
}

.hard--ends {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

.hard--sides {
  padding-right: 0 !important;
  padding-left: 0 !important;
}

.uppercase {
  text-transform: uppercase;
}

.overflow {
  overflow: hidden;
}

.clickable {
  cursor: pointer !important;
}

tr.clickable:hover,
li.clickable:hover {
  background-color: #F0F0F0;
}

.no-gutter {
  padding: 0 !important;
}

.no-gutter-top {
  padding-top: 0 !important;
}

.no-gutter-bottom {
  padding-bottom: 0 !important;
}

.no-gutter-right {
  padding-right: 0 !important;
}

.no-gutter-left {
  padding-left: 0 !important;
}

.nowrap {
  white-space: nowrap;
}

.line-height--small {
  line-height: 1.5em;
}

.line-height--medium {
  line-height: 1.8em;
}

.line-height--long {
  line-height: 2em;
}

.no-border-radius {
  border-radius: 0 !important;
}

.no-border {
  border: 0 !important;
}

.no-border--top {
  border-top: 0 !important;
}

.no-border--bottom {
  border-bottom: 0 !important;
}

.no-border--right {
  border-right: 0 !important;
}

.no-border--left {
  border-left: 0 !important;
}

.no-border--ends {
  border-top: 0 !important;
  border-bottom: 0 !important;
}

.no-border--sides {
  border-right: 0 !important;
  border-left: 0 !important;
}

.visual-debugger * {
  outline: 1px solid red;
}

.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.has-error > * {
  border: solid red 1px;
  padding: 15px 11px;
}

.main-header {
  height: 60px;
  overflow: hodden;
}

.main-header__logo {
  float: left;
  margin-top: 10px;
  width: 200px;
}

.main-header__navbar {
  float: right;
  margin-top: 5px;
}

.main-header__navbar-item {
  border-bottom: solid transparent 2px;
  font-size: 16px;
  font-weight: 600;
  float: left;
  margin-left: 30px;
  padding-bottom: 8px;
  text-transform: capitalize;
  transition: all linear 0.3s;
}

.main-header__navbar-item.active {
  color: #20befc;
  border-bottom: solid #20befc 2px;
}

.view-layout {
  clear: both;
}

.search {
  background-color: #efefef;
  padding: 10px 0;
}

.search input {
  padding: 0 10px;
  vertical-align: middle;
  width: 90%;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
